# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-02 08:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('author_name', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=600)),
                ('link', models.CharField(max_length=600)),
                ('summary', models.TextField()),
                ('slug', models.CharField(max_length=300)),
                ('date_crawled', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_date', models.DateTimeField()),
                ('article_id', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Article_Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance', models.FloatField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Article_Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance', models.FloatField()),
                ('permid', models.FloatField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Article_Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance', models.FloatField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Article_Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance', models.FloatField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('date_crawled', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Calais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calais_request_id', models.CharField(max_length=300)),
                ('calais_id', models.CharField(max_length=300)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='EntityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword_From_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=600)),
                ('name', models.CharField(max_length=600)),
                ('function_name', models.CharField(max_length=100)),
                ('first_crawl', models.BooleanField(default=False)),
                ('has_rss', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_crawled', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='RelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='RssSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rss_url', models.CharField(max_length=600)),
                ('function_name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_crawled', models.DateTimeField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Category')),
                ('news_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.NewsSource')),
            ],
        ),
        migrations.CreateModel(
            name='SocialTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.AddField(
            model_name='relation',
            name='relation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.RelationType'),
        ),
        migrations.AddField(
            model_name='entity',
            name='entity_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EntityType'),
        ),
        migrations.AddField(
            model_name='article_topic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Topic'),
        ),
        migrations.AddField(
            model_name='article_social',
            name='social_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SocialTag'),
        ),
        migrations.AddField(
            model_name='article_industry',
            name='industry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Industry'),
        ),
        migrations.AddField(
            model_name='article_entity',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Entity'),
        ),
        migrations.AddField(
            model_name='article',
            name='entity',
            field=models.ManyToManyField(through='api.Article_Entity', to='api.Entity'),
        ),
        migrations.AddField(
            model_name='article',
            name='industry',
            field=models.ManyToManyField(through='api.Article_Industry', to='api.Industry'),
        ),
        migrations.AddField(
            model_name='article',
            name='keyword',
            field=models.ManyToManyField(to='api.Keyword_From_Source'),
        ),
        migrations.AddField(
            model_name='article',
            name='language',
            field=models.ManyToManyField(to='api.Language'),
        ),
        migrations.AddField(
            model_name='article',
            name='news_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.NewsSource'),
        ),
        migrations.AddField(
            model_name='article',
            name='relation',
            field=models.ManyToManyField(to='api.Relation'),
        ),
        migrations.AddField(
            model_name='article',
            name='rss_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.RssSource'),
        ),
        migrations.AddField(
            model_name='article',
            name='social_tag',
            field=models.ManyToManyField(through='api.Article_Social', to='api.SocialTag'),
        ),
        migrations.AddField(
            model_name='article',
            name='topic',
            field=models.ManyToManyField(through='api.Article_Topic', to='api.Topic'),
        ),
    ]
